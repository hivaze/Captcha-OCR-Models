{
    "best_epoch": {
        "number": 99,
        "train_loss": 0.09294252668189097,
        "eval_loss": 0.11361
    },
    "history": {
        "train": [
            7.4113435443443585,
            4.421765122232558,
            4.400896464722066,
            4.390799015383177,
            4.379751368413998,
            4.369692162622379,
            4.346108376225339,
            4.310795687421968,
            4.28749418258667,
            4.257911959780922,
            4.198409581486183,
            4.037111013750486,
            3.321006835261478,
            1.9890416785131526,
            1.1550291965279398,
            0.7952551653113547,
            0.6281971052477632,
            0.5180913379675225,
            0.45004828972152516,
            0.40436415261105646,
            0.36804452349868,
            0.33677317560473574,
            0.32467512541179416,
            0.30360738008837157,
            0.2787084330486346,
            0.25774843066553527,
            0.25385020654412765,
            0.2419076169593425,
            0.23480766917331308,
            0.22680444279803505,
            0.22331068296975728,
            0.2152450152590305,
            0.20180516416513467,
            0.2018812510031688,
            0.21269628292397608,
            0.1917449584867381,
            0.1791576244219949,
            0.1890365550223785,
            0.1810350053106682,
            0.17409656479766097,
            0.16522840740559977,
            0.16678915927304497,
            0.1672328927471668,
            0.16756580581393424,
            0.16113969381851487,
            0.1559978736258006,
            0.15087925340933137,
            0.15574375238222413,
            0.15707144971135295,
            0.14565062381421465,
            0.14980536586121668,
            0.14598820075581345,
            0.15148134831386276,
            0.14379062248936184,
            0.16122257813245436,
            0.14327698578185674,
            0.13665612824732745,
            0.13339716082886804,
            0.13137273914829084,
            0.12874141241176218,
            0.12587769980294794,
            0.12824983998567244,
            0.12529682632111297,
            0.1209962083663367,
            0.12307852657535408,
            0.12318147077590605,
            0.12255474434623236,
            0.12432905710950683,
            0.12373685676463042,
            0.12630478405877005,
            0.12362909057660948,
            0.12162788353766067,
            0.11645457884178886,
            0.11268881963023657,
            0.12054178580830369,
            0.11843623852805246,
            0.11219750920051261,
            0.10851545895956739,
            0.11381531374741204,
            0.11094005613387385,
            0.10798817278840873,
            0.109027237030147,
            0.11178862624153306,
            0.10158167463503306,
            0.10581765729415266,
            0.09905041942868052,
            0.114343359500547,
            0.09795802510991881,
            0.1148490586046931,
            0.10267156315377995,
            0.10176451956924004,
            0.09947771852529502,
            0.103787766038617,
            0.10107776664103134,
            0.0923252236333829,
            0.10022606247965293,
            0.09729042154135584,
            0.09468563966736009,
            0.0927132319517528,
            0.09294252668189097
        ],
        "eval": [
            4.46183,
            4.41186,
            4.40232,
            4.38661,
            4.37247,
            4.36254,
            4.33916,
            4.30273,
            4.28594,
            4.23105,
            4.16207,
            3.95771,
            2.62405,
            1.46989,
            0.94523,
            0.66423,
            0.59289,
            0.46553,
            0.43472,
            0.39393,
            0.32233,
            0.33457,
            0.31445,
            0.29225,
            0.28435,
            0.25255,
            0.24853,
            0.24109,
            0.23039,
            0.22803,
            0.22225,
            0.21508,
            0.19963,
            0.2085,
            0.2111,
            0.19147,
            0.20005,
            0.19423,
            0.18255,
            0.18526,
            0.17987,
            0.17314,
            0.17821,
            0.17639,
            0.15721,
            0.15856,
            0.16963,
            0.15642,
            0.15074,
            0.16354,
            0.16862,
            0.14959,
            0.14631,
            0.15796,
            0.15251,
            0.14722,
            0.13724,
            0.14523,
            0.14551,
            0.14887,
            0.14035,
            0.14717,
            0.14848,
            0.13394,
            0.14244,
            0.14402,
            0.13875,
            0.13781,
            0.14383,
            0.1356,
            0.13354,
            0.13974,
            0.14659,
            0.13237,
            0.13091,
            0.12381,
            0.12607,
            0.11922,
            0.12441,
            0.12397,
            0.12243,
            0.12736,
            0.12404,
            0.13031,
            0.11887,
            0.11839,
            0.12511,
            0.1406,
            0.11916,
            0.12384,
            0.12296,
            0.12114,
            0.13121,
            0.12106,
            0.11772,
            0.12924,
            0.11733,
            0.11526,
            0.12527,
            0.11361
        ]
    },
    "architecture": "OCR_CRNN(\n  (encoder): CNNImageEncoderV2(\n    (layers): Sequential(\n      (0): ConvBlock(\n        (bn): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(3, 32, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), bias=False)\n        (pooling): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (1): ConvBlock(\n        (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n        (pooling): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (2): ConvBlock(\n        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(64, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (3): ConvBlock(\n        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (4): ConvBlock(\n        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (5): ConvBlock(\n        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n    )\n    (dropout): Dropout(p=0.1, inplace=False)\n    (out_net): Sequential(\n      (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)\n      (1): Linear(in_features=128, out_features=128, bias=True)\n    )\n  )\n  (decoder): BiLSTMImageDecoder(\n    (norm): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (rnn): LSTM(128, 128, num_layers=2, dropout=0.1, bidirectional=True)\n    (out_proj): Linear(in_features=256, out_features=65, bias=True)\n  )\n  (softmax): LogSoftmax(dim=-1)\n)"
}