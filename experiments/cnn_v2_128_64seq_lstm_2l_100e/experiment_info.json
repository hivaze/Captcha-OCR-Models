{
    "best_epoch": {
        "number": 92,
        "train_loss": 0.11980348467072353,
        "eval_loss": 0.15293
    },
    "history": {
        "train": [
            7.378146044815643,
            4.4211281583279,
            4.401753015156034,
            4.386934395077862,
            4.37591298622421,
            4.3551900175553335,
            4.317495750475533,
            4.282314505758165,
            4.248624324798584,
            4.229110560839689,
            4.20744743830041,
            4.158213114436669,
            3.902866689464714,
            2.791049803359599,
            1.7347686124753348,
            1.2291411976271038,
            0.9656029826478113,
            0.7447840284697617,
            0.6266589172278778,
            0.5540813471697554,
            0.4903209586686726,
            0.4622514149810694,
            0.42596062678325025,
            0.3895158133929289,
            0.36953602900987936,
            0.35289624484279486,
            0.3546527539250217,
            0.31926027166692517,
            0.3058022413449951,
            0.2954258537745174,
            0.2870525823363775,
            0.27001544040969655,
            0.27857174111317984,
            0.2689813454694386,
            0.26028277998483634,
            0.24301448407806928,
            0.2417706758538379,
            0.2350189076571525,
            0.24461531016645552,
            0.22018241071248357,
            0.2157027406405799,
            0.2161175838754147,
            0.20835188087783282,
            0.20196407354330714,
            0.20511807142933713,
            0.20440249673173397,
            0.19719800598259213,
            0.18985577889635594,
            0.18916452572315554,
            0.191443861002409,
            0.18785615831236296,
            0.18759998283054255,
            0.18202101118579694,
            0.1767585817960244,
            0.174196972594231,
            0.174639011391356,
            0.16913017885217183,
            0.1684491518366186,
            0.17486590307347383,
            0.16785395843318746,
            0.1588317140748229,
            0.19124422863691667,
            0.15667563837163057,
            0.1703857633320591,
            0.16108726078196417,
            0.15516247392832477,
            0.15243851695256896,
            0.14790320622770092,
            0.14686815138859086,
            0.14709036787853966,
            0.14799744984771632,
            0.15304465412716323,
            0.15025287206414378,
            0.14513976975709578,
            0.14615689142595364,
            0.14203929599327378,
            0.13859946837153617,
            0.1372095552992217,
            0.13025226425143738,
            0.14053727761854098,
            0.14047357572030417,
            0.1285577201390568,
            0.13657824336727964,
            0.14064505809470068,
            0.1390959971313235,
            0.14473884109454818,
            0.12602769889974896,
            0.13097325306904467,
            0.1299422595508491,
            0.12563589243571968,
            0.12532125130484376,
            0.1240394885026956,
            0.11980348467072353,
            0.12337850600103789,
            0.12136764022745664,
            0.12138092036865934,
            0.12160839102690733,
            0.11873776220445391,
            0.11981858558292631,
            0.12656528842222842
        ],
        "eval": [
            4.4541,
            4.40992,
            4.3946,
            4.38454,
            4.38292,
            4.34184,
            4.3103,
            4.27112,
            4.25404,
            4.23401,
            4.19831,
            4.10816,
            3.53603,
            2.23677,
            1.55267,
            1.22406,
            0.8349,
            0.71101,
            0.63663,
            0.59087,
            0.52526,
            0.51395,
            0.42035,
            0.40147,
            0.37092,
            0.35951,
            0.34369,
            0.34239,
            0.32802,
            0.31619,
            0.29532,
            0.30178,
            0.28582,
            0.28247,
            0.27002,
            0.27034,
            0.2605,
            0.25875,
            0.24222,
            0.23762,
            0.24992,
            0.23346,
            0.21831,
            0.21776,
            0.22885,
            0.21497,
            0.2274,
            0.22181,
            0.21388,
            0.23943,
            0.20896,
            0.21036,
            0.20154,
            0.2078,
            0.20577,
            0.20895,
            0.20053,
            0.20474,
            0.19158,
            0.19881,
            0.19322,
            0.19448,
            0.19361,
            0.19394,
            0.19887,
            0.19144,
            0.1789,
            0.17951,
            0.17455,
            0.1849,
            0.18347,
            0.1742,
            0.17256,
            0.17689,
            0.1745,
            0.17077,
            0.17544,
            0.17482,
            0.16358,
            0.16685,
            0.16778,
            0.16239,
            0.17018,
            0.17468,
            0.17414,
            0.1616,
            0.16124,
            0.15529,
            0.15397,
            0.15979,
            0.16963,
            0.15858,
            0.15293,
            0.1601,
            0.16294,
            0.15713,
            0.15855,
            0.16186,
            0.15953,
            0.16514
        ]
    },
    "architecture": "OCR_CRNN(\n  (encoder): CNNImageEncoderV2(\n    (layers): Sequential(\n      (0): ConvBlock(\n        (bn): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(3, 32, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), bias=False)\n        (pooling): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (1): ConvBlock(\n        (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n        (pooling): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (2): ConvBlock(\n        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(64, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (3): ConvBlock(\n        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (4): ConvBlock(\n        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (5): ConvBlock(\n        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n    )\n    (dropout): Dropout(p=0.1, inplace=False)\n    (out_net): Sequential(\n      (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)\n      (1): Linear(in_features=128, out_features=128, bias=True)\n    )\n  )\n  (decoder): BiLSTMImageDecoder(\n    (norm): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (rnn): LSTM(128, 128, num_layers=2, dropout=0.1, bidirectional=True)\n    (out_proj): Linear(in_features=256, out_features=65, bias=True)\n  )\n  (softmax): LogSoftmax(dim=-1)\n)"
}