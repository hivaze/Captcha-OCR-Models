{
    "best_epoch": {
        "number": 99,
        "train_loss": 0.20460229263275484,
        "eval_loss": 0.22667
    },
    "history": {
        "train": [
            7.474794321422335,
            4.601671568955047,
            4.482716554327856,
            4.407654206964034,
            4.3926886968974825,
            4.383409385439716,
            4.3643438242658785,
            4.351827054084102,
            4.327183475977258,
            4.288188101370124,
            4.253056737441051,
            4.237245583836036,
            4.21497398086741,
            4.192919181872018,
            4.151153878320621,
            4.060844231255447,
            3.969439503512805,
            3.40532013434398,
            2.736350201353242,
            2.22719536853742,
            1.8379024131388604,
            1.5868311954450003,
            1.3268549925164332,
            1.1804814663114427,
            1.0782012494304511,
            0.96314545749109,
            0.8742181915271131,
            0.8160303212419341,
            0.7613078876386715,
            0.6958911320831203,
            0.6655475225629686,
            0.6185498237609863,
            0.5898696904695486,
            0.5567171335974826,
            0.5388461951213547,
            0.5185936478119862,
            0.494251296112809,
            0.48876763408697105,
            0.4858396004272413,
            0.4552773640880102,
            0.4359423936922339,
            0.4229008147988138,
            0.4196196322954154,
            0.41002785480475124,
            0.388508718602265,
            0.3894110869003248,
            0.3760479224633567,
            0.3761454537699494,
            0.35906109421313565,
            0.3515298596665829,
            0.3504030772402317,
            0.348206295620037,
            0.33598872528800483,
            0.33573182398759865,
            0.3274257752714278,
            0.31507090243357644,
            0.3082205647531944,
            0.3046629768383654,
            0.3046883503092995,
            0.30675201268890234,
            0.2912692327665377,
            0.2862265879594827,
            0.2999667408345621,
            0.2881554548121706,
            0.28957333689249015,
            0.2706757129370412,
            0.28019605331783054,
            0.28175595025473005,
            0.28264813370342495,
            0.26669829423669017,
            0.26676003144511695,
            0.25708295310599893,
            0.2691444132146956,
            0.25465964101537875,
            0.25381804719755924,
            0.2537935504430457,
            0.25597068384478366,
            0.2472354068031794,
            0.2406197392110583,
            0.24760646495638014,
            0.2428064272750782,
            0.23173385933984683,
            0.2284139649400228,
            0.22771800394299663,
            0.24517416803142691,
            0.23691140134123306,
            0.25361957712264,
            0.23134631597543065,
            0.2205837278426448,
            0.22987172818636592,
            0.2239124786250199,
            0.21986827141121973,
            0.22484416750412953,
            0.2204116718678535,
            0.21964902006372622,
            0.21922560705791547,
            0.2114865249848064,
            0.2108864010889319,
            0.20367810262154928,
            0.20460229263275484
        ],
        "eval": [
            4.62078,
            4.54395,
            4.42116,
            4.40495,
            4.40167,
            4.37782,
            4.35313,
            4.3496,
            4.30549,
            4.27316,
            4.28197,
            4.23966,
            4.21443,
            4.17726,
            4.11107,
            4.01558,
            3.73457,
            3.23988,
            2.57004,
            1.99632,
            1.76847,
            1.46295,
            1.21081,
            1.1731,
            0.97638,
            0.88813,
            0.87675,
            0.76712,
            0.72723,
            0.67653,
            0.63932,
            0.66086,
            0.59021,
            0.53745,
            0.5251,
            0.52956,
            0.51291,
            0.49835,
            0.47941,
            0.44904,
            0.44594,
            0.42173,
            0.42981,
            0.41637,
            0.41631,
            0.39542,
            0.4144,
            0.40706,
            0.37007,
            0.36168,
            0.38227,
            0.34657,
            0.36647,
            0.36619,
            0.34927,
            0.33928,
            0.33536,
            0.33481,
            0.31706,
            0.3353,
            0.31337,
            0.30883,
            0.31053,
            0.32962,
            0.29774,
            0.29235,
            0.2872,
            0.2878,
            0.30269,
            0.27265,
            0.30007,
            0.28004,
            0.27551,
            0.2679,
            0.25541,
            0.30045,
            0.27299,
            0.27866,
            0.27718,
            0.27015,
            0.26678,
            0.24985,
            0.25283,
            0.28619,
            0.26582,
            0.27605,
            0.25317,
            0.2408,
            0.26005,
            0.25337,
            0.26107,
            0.25116,
            0.23573,
            0.25207,
            0.24146,
            0.24163,
            0.22955,
            0.23934,
            0.22944,
            0.22667
        ]
    },
    "architecture": "OCR_CARNN(\n  (encoder): CNNImageEncoderV2(\n    (layers): Sequential(\n      (0): ConvBlock(\n        (bn): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(3, 32, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), bias=False)\n        (pooling): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (1): ConvBlock(\n        (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n        (pooling): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (2): ConvBlock(\n        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(64, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (3): ConvBlock(\n        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (4): ConvBlock(\n        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (5): ConvBlock(\n        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n    )\n    (dropout): Dropout(p=0.1, inplace=False)\n    (out_net): Sequential(\n      (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)\n      (1): Linear(in_features=128, out_features=128, bias=True)\n    )\n  )\n  (decoder): SelfAttenBiLSTMImageDecoder(\n    (norm): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (self_atten): MultiheadAttention(\n      (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)\n    )\n    (rnn): LSTM(128, 128, num_layers=2, dropout=0.1, bidirectional=True)\n    (out_proj): Linear(in_features=256, out_features=65, bias=True)\n  )\n  (softmax): LogSoftmax(dim=-1)\n)"
}