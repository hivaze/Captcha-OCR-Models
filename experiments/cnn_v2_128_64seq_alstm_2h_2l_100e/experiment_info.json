{
    "best_epoch": {
        "number": 75,
        "train_loss": 0.199158231385901,
        "eval_loss": 0.18656
    },
    "history": {
        "train": [
            5.695687330221828,
            4.622447532943532,
            4.624046482617342,
            4.6237458941302725,
            4.616142544565322,
            4.463726586933378,
            4.4231264440319205,
            4.4156665983079355,
            4.395407809486872,
            4.371692204777198,
            4.318465130238593,
            4.255147294153141,
            4.203890323638916,
            4.106589546686487,
            3.8182993116258066,
            3.2649054949796654,
            2.3941221357900884,
            1.7351404307763787,
            1.3852954816214647,
            1.0486197599881812,
            0.8818656206130981,
            0.7431851059575624,
            0.6408727236940891,
            0.6398729874363428,
            0.5665971251982677,
            0.492572022389762,
            0.48083524537991873,
            0.43331150239027,
            0.44087585844571076,
            0.4259733282312562,
            0.3962343112577366,
            0.41639879723138445,
            0.36815771913226647,
            0.35090253851081754,
            0.32937524156479897,
            0.332817665006541,
            0.30900424435923374,
            0.3091733018054238,
            0.30527646481236326,
            0.30310596129562284,
            0.36226685156550587,
            0.307404586597334,
            0.300343856215477,
            0.2922435133140298,
            0.269517107477671,
            0.2858541025013863,
            0.2920907867860191,
            0.27139110750035395,
            0.24530418632151205,
            0.2350993135684653,
            0.23299382400663593,
            0.244954513598092,
            0.24069360577607457,
            0.2600733922629417,
            0.26258018292203733,
            0.24317597362059581,
            0.2792991637429105,
            0.24846799879134457,
            0.22071706305576277,
            0.2305944969382467,
            0.2206617505112781,
            0.24661761371395255,
            0.23668841093401366,
            0.22551126174534422,
            0.21612720021718665,
            0.27338691772539403,
            0.2514074171268487,
            0.20980115913892095,
            0.20934158431578287,
            0.19511742776707758,
            0.24607637109635752,
            0.23696271999727322,
            0.22937084564679786,
            0.25457652894001975,
            0.20766104550301273,
            0.199158231385901,
            0.22513199871099449,
            0.2370671265864674,
            0.2662787784503985,
            0.21301947364324256,
            0.19551872037634066,
            0.2712811752210689,
            0.24346983244147483
        ],
        "eval": [
            4.6288,
            4.63006,
            4.63472,
            4.63531,
            4.6268,
            4.43216,
            4.47325,
            4.41832,
            4.40295,
            4.36555,
            4.29559,
            4.22941,
            4.20437,
            4.08795,
            3.89258,
            2.99573,
            2.12719,
            1.72044,
            1.18657,
            1.09346,
            0.81269,
            0.69855,
            0.6512,
            0.63749,
            0.54979,
            0.48471,
            0.46712,
            0.45649,
            0.43907,
            0.39582,
            0.48894,
            0.381,
            0.3705,
            0.36359,
            0.32908,
            0.2957,
            0.31549,
            0.31437,
            0.30781,
            0.32369,
            0.33116,
            0.29976,
            0.30047,
            0.30112,
            0.28311,
            0.30747,
            0.27415,
            0.28959,
            0.25733,
            0.23915,
            0.24581,
            0.24465,
            0.25289,
            0.29171,
            0.26553,
            0.24863,
            0.27436,
            0.24335,
            0.23498,
            0.23583,
            0.23186,
            0.25395,
            0.21686,
            0.22707,
            0.23091,
            0.30117,
            0.21694,
            0.19875,
            0.20302,
            0.22691,
            0.24757,
            0.243,
            0.29536,
            0.19957,
            0.21838,
            0.18656,
            0.38184,
            0.21141,
            0.20857,
            0.19536,
            0.20437,
            0.30017,
            0.20045
        ]
    },
    "architecture": "OCR_CARNN(\n  (encoder): CNNImageEncoderV2(\n    (layers): Sequential(\n      (0): ConvBlock(\n        (bn): BatchNorm2d(3, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(3, 32, kernel_size=(9, 9), stride=(1, 1), padding=(4, 4), bias=False)\n        (pooling): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (1): ConvBlock(\n        (bn): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(32, 64, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)\n        (pooling): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (2): ConvBlock(\n        (bn): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(64, 128, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (3): ConvBlock(\n        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (4): ConvBlock(\n        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n      (5): ConvBlock(\n        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n        (pooling): MaxPool2d(kernel_size=(2, 1), stride=(2, 1), padding=0, dilation=1, ceil_mode=False)\n        (activation): Hardswish()\n      )\n    )\n    (dropout): Dropout(p=0.1, inplace=False)\n    (out_net): Sequential(\n      (0): LayerNorm((128,), eps=1e-05, elementwise_affine=True)\n      (1): Linear(in_features=128, out_features=128, bias=True)\n    )\n  )\n  (decoder): SelfAttenBiLSTMImageDecoder(\n    (norm): BatchNorm1d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n    (self_atten): MultiheadAttention(\n      (out_proj): NonDynamicallyQuantizableLinear(in_features=128, out_features=128, bias=True)\n    )\n    (rnn): LSTM(128, 128, num_layers=2, dropout=0.1, bidirectional=True)\n    (out_proj): Linear(in_features=256, out_features=65, bias=True)\n  )\n  (softmax): LogSoftmax(dim=-1)\n)"
}